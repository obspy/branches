# INPUT file for NDLB_part_I:

# -------------------------------------------------------------------------------------------------------------
# Address info:

[Address_info]
address = /home/hosseini/Desktop/test							; where you want to save the Waveforms, Response files and other information. examples: (/media/Elements/TEST_WAVE) (/export/data/BH) (/import/neptun-radler/hosseini-downloads) (/home/hosseini/Desktop/Mafe)
interactive_address = N									; Interactive Address: Whether you want to give the address interactively or not (for Updating, Quality control, Plotting)

# The target folder, which will be used for plotting:
target_folder = /home/hosseini/test/Data/2009-09-29_2009-10-01_7.4_7.6/20090930_0000037/IRIS/eval_kasra		

save_folder = /home/hosseini/Desktop/plot_test			; The address where you want to save the figures.

# -------------------------------------------------------------------------------------------------------------
#Parameters for event request:

[Event_Request]
min_datetime = 2011-02-01								; min datetime (Please consider "nodes" module and "INPUT-Periods" for parallel requests)
max_datetime = 2011-02-03								; max datetime (Please consider "nodes" module and "INPUT-Periods" for parallel requests)

min_magnitude = 5.5										; min magnitude (Please consider "nodes" module and "INPUT-Periods" for parallel requests)
max_magnitude = 9.6										; max magnitude (Please consider "nodes" module and "INPUT-Periods" for parallel requests)

min_depth = +10			        						; min depth
max_depth = -6000										; max depth

min_longitude = -180									; min longitude (-180) (event)
max_longitude = +180									; max longitude (180) (event)
min_latitude = -90										; min latitude (-90) (event)
max_latitude = +90										; max latitude (90) (event)

time_before = 300										; Time before the Event
time_after = 4800										; Time after the Event
	
max_results = 2500										; max Results

# -------------------------------------------------------------------------------------------------------------
# Type of request:

[Request]
get_events = Y											; To get events (Y)
IRIS = N												; IRIS client will be used (Y)
ArcLink = Y												; ArcLink client will be used (Y)

# -------------------------------------------------------------------------------------------------------------
# Parallel?

[Parallel]
nodes = Y												; Downloading in Parallel way -- ATTENTION: "nodes" and "INPUT-Periods" --> You should enter the required periods in "INPUT-Periods".

# -------------------------------------------------------------------------------------------------------------
# What do you want to get?

[what_to_get]
waveform = Y											; get Waveforms
response = Y											; get Response file
SAC = Y													; save waveforms in SAC format

# -------------------------------------------------------------------------------------------------------------
# Some specifications about your request:

[specifications_request]
network = *												; Network code, e.g. ‘BW’. (for mass = Y [line 33], wildcards allowed.)
station = *												; Station code, e.g. ‘MANZ’. (for mass = Y [line 33], wildcards allowed.)
location = *											; Location code, e.g. ‘00’. (for mass = Y [line 33], wildcards allowed.)
channel = *												; Channel code, e.g. ‘EHE’. (for mass = Y [line 33], wildcards allowed.)

BHE = N 												; BHE is needed
BHN = N													; BHN is needed
BHZ = Y													; BHZ is needed
other = N												; if you want to download channels other than BHE, BHN, BHZ (or if you want to download BH*) [has not implemented yet]

# ATTENTION: Restricting returned data by geographical coordinates either
# all of minlat, maxlat, minlon and maxlon have to be specified (for a rectangular bounding box) OR 
# all of lat, lon, minradius and maxradius have to be specified (for a circular bounding area)

lon = None												; Latitude of center point for circular bounding area. (get_Networks)
lat = None												; Longitude of center point for circular bounding area. (get_Networks)
minradius = None										; Minimum radius for circular bounding area. (get_Networks)
maxradius = None										; Maximum radius for circular bounding area. (get_Networks)

minlon = None											; Minimum latitude for rectangular bounding box. (get_Networks)
maxlon = None											; Maximum latitude for rectangular bounding box. (get_Networks)
minlat = None											; Minimum longitude for rectangular bounding box. (get_Networks)
maxlat = None											; Maximum longitude for rectangular bounding box. (get_Networks)

# -------------------------------------------------------------------------------------------------------------
# TEST the program?

[test]
TEST = Y												; whether you want to test ObsPyDMT or not
TEST_no = 10											; How many stations you want to test for!

# -------------------------------------------------------------------------------------------------------------
# Update:

[update]
update_interactive = N									; Update in an interactive way (address will be given by user)

update_iris = N											; Update the IRIS folder
update_arc = Y											; Update the ArcLink folder

num_updating_IRIS = 1									; Number of iterations on IRIS folders for updating
num_updating_ARC = 1									; Number of iterations on ArcLink folders for updating

# -------------------------------------------------------------------------------------------------------------
# Quality Control:

[QC]
QC_IRIS = N												; Quality Control for IRIS
QC_ARC = N												; Quality Control for ArcLink

# -------------------------------------------------------------------------------------------------------------
# Email:

[email]
email = N												; After completing your job, an email will be sent to your mailbox (for each node)
email_address = NDLB.partI@gmail.com					; Address of your email

# -------------------------------------------------------------------------------------------------------------
# Report:

[report]
report = Y												; After completing your job, a report will be generated in 'Address/Data' (Address is defined in line 4)

# -------------------------------------------------------------------------------------------------------------
# Plot: (For ObsPyPT [ObsPy Plotting Tool])

[ObsPyPT]
plot_event = N											; Plot the event (Y/N)...ATTENTION: you should have "mpl_toolkits.basemap" already installed. [refer: http://pypi.python.org/pypi/basemap]
plot_sta = N											; Plot all available stations...ATTENTION: you should have "mpl_toolkits.basemap" already installed. [refer: http://pypi.python.org/pypi/basemap]
plot_ray = Y											; Plot ray path from an event to stations...ATTENTION: you should have "mpl_toolkits.basemap" already installed. [refer: http://pypi.python.org/pypi/basemap]

llcrnrlon = -180										; longitude of lower left hand corner of the desired map domain (degrees).
urcrnrlon = 180											; longitude of upper right hand corner of the desired map domain (degrees).
llcrnrlat = -90											; latitude of lower left hand corner of the desired map domain (degrees).
urcrnrlat = 90											; latitude of upper right hand corner of the desired map domain (degrees).

lon_0 = 0												; central Latitude of projection (plot_sta)
lat_0 = 0												; central Longitude of projection (plot_sta)
# -------------------------------------------------------------------------------------------------------------
